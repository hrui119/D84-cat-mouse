CSC D84 - Artificial Intelligence

Assignment 4 - Neural Networks for OCR

________________________________________________

Student Name 1 (last, first): Rui, Haowen

Student Name 2 (last, first): Alexander, Andreas

Student number 1: 1005843688 

Student number 2: 1005800368

UTORid 1: ruihaowe

UTORid 2: alexa376

READ THIS AND SIGN YOUR NAME AT THE END:

 I certify that I have read the UTSC code on academic
honesty and plaguarism. All work submitted as part
of this assignment is my own.

	Signed: _Haowen Rui__	_Andreas Alexander__

(-5 marks for failing to provide the identifying
 information requested above)
________________________________________________

Answer the following questions. Be concise and clear
but explain carefully when needed.

1 .- (1 marks) Train a 1-layer network using the Logistic activation
               function. 

	       Copy/paste the reported classification rates for:
	 	
	       Training data (last training round): 
		Digit 0, correct classification rate=0.945783
		Digit 1, correct classification rate=0.965278
		Digit 2, correct classification rate=0.811623
		Digit 3, correct classification rate=0.851485
		Digit 4, correct classification rate=0.902335
		Digit 5, correct classification rate=0.772414
		Digit 6, correct classification rate=0.906931
		Digit 7, correct classification rate=0.883946
		Digit 8, correct classification rate=0.791411
		Digit 9, correct classification rate=0.831683
		Average correct classification rate: 0.866289
		Magnitude of largest network weight: 13.262426

	       Testing data:
		Digit 0, correct classification rate=0.967347
		Digit 1, correct classification rate=0.965639
		Digit 2, correct classification rate=0.818798
		Digit 3, correct classification rate=0.869307
		Digit 4, correct classification rate=0.873727
		Digit 5, correct classification rate=0.775785
		Digit 6, correct classification rate=0.932150
		Digit 7, correct classification rate=0.887160
		Digit 8, correct classification rate=0.818275
		Digit 9, correct classification rate=0.835481
		Average correct classification rate: 0.874367

2 .- (1 marks) Repeat the process using the hyperbolic tangent activation
	       function.
		Training data:
		Digit 0, correct classification rate=0.946429
		Digit 1, correct classification rate=0.989381
		Digit 2, correct classification rate=0.812253
		Digit 3, correct classification rate=0.846311
		Digit 4, correct classification rate=0.893701
		Digit 5, correct classification rate=0.754797
		Digit 6, correct classification rate=0.925764
		Digit 7, correct classification rate=0.885768
		Digit 8, correct classification rate=0.777320
		Digit 9, correct classification rate=0.799172
		Average correct classification rate: 0.863090
		Magnitude of largest network weight: 5.696394

		Testing data:
		Digit 0, correct classification rate=0.963265
		Digit 1, correct classification rate=0.978855
		Digit 2, correct classification rate=0.797481
		Digit 3, correct classification rate=0.852475
		Digit 4, correct classification rate=0.928717
		Digit 5, correct classification rate=0.720852
		Digit 6, correct classification rate=0.896660
		Digit 7, correct classification rate=0.883268
		Digit 8, correct classification rate=0.750513
		Digit 9, correct classification rate=0.700694
		Average correct classification rate: 0.847278
		
3 .- (1 marks) Which type of activation function yielded the best classification
	       results? which one learned faster?
		For testing results, logistic got better results, but hyperbolic
		tangent learns faster. 

4 .- (1 marks) Train a 2-layer network with hyperbolic-tangent activation, using
	       150 hidden units. Report the classification rates on training and
	       testing data just as for 1) and 2).
	       
	       Training data (last training round): 
		
	       
	       Testing data: 
	       
	       
5 .- (1 marks) Same as 4), except use 10 hidden units instead

		Training data (last training round): 
		
	       
	        Testing data: 
		

6 .- (1 marks) Same as 5), except use 3 hidden units instead

		Training data (last training round): 
		
	       
	        Testing data: 
		

7 .- (3 marks) Comment on the experiments in 4, 5, and 6, and give your conclusion
	       regarding the effect of the number of hidden units on classification
	       accuracy. 
	       What is the network with 3 hidden telling you about this classification
	       problem?
	       increasing the number of neurons does increase the accuracy of the model 
	       but only up to a point. In our experiments, 
	       When there's too few neurons in the hidden layers, there may not be enough 
	       intermediate features generated to guide the neurons after it, thus 
	       decreasing the model's accuracy. 

8 .- (3 marks) Train the best performing network you can. Use any activation function
	       you wish, and set the number of hidden units so as to achieve the best
	       performance.
		Activation function: 
	        Number of hidden units used: 
	        Classification rate on testing data:

9 .- (3 marks) Describe how you would build a network to play the cat
	        and mouse game (move the mouse to help it survive).

		- Describe what the input is in terms of a vector of
		  values
		  The input to the neural network would be the current state of the game, 
		  which would include the positions of the cat, the mouse, and the cheese 
		  on the grid, as well as the walls and other obstacles on the grid.
		  
		- Describe what the output layer looks like (how many
		  neurons and what they encode)
		  the output layer will have 4 neurons, each represents a movement of up, 
		  right, down, and left. The values of the output neurons would be between 
		  0 and 1 and would represent the probability of moving in each direction. 
		  The highest probability would be selected as the direction of movement 
		  for the mouse.
		  
		- Describe the error function
		  The error function for this neural network could be the mean squared 
		  error between the predicted output of the neural network and the best 
		  movement for the mouse determined either by Dijkstra's algo or a heuristic 
		  function. This error would be calculated over a batch of game states and 
		  movements to update every weight in the neural network. 
		  
		- How many layers should you use?
		  The number of layers to use would depend on the smartness of the cat and 
		  the size of the dataset. A neural network with two or three hidden layers 
		  with around a hundred neurons per layer should be sufficient for the number 
		  of possible states and the features we need to generate for this task. 
_____________________________________________________

Mark with an 'x' where appropriate. If something is only
working partially, briefly describe what works, what
doesn't work, or what problems exist.
	
        	Complete/Working	Partial		Not done

Logistic
 activation		x
 
Tanh
 activation		x	
	
1L Feed-forward		x  

1L Backprop		x

1L Classify		x

2L Feed-forward		x

2L Backprop		x

2L Classify		x
_____________________________________________________

Marking:

(10) one-layer, logistic network trains and classifies

(5)  one-layer, tanh network trains and classifies

(15) two-layer, tanh network trains and classifies

(5) two-layer, logistic network trains and classifies

(5 marks) Can train 2-layer networks with either activation function
	  and any number of hidden units

(12 marks) Answers in this report

Total for A4:       / out of 52
